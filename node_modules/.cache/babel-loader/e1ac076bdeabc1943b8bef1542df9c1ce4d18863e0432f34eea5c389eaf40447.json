{"ast":null,"code":"var _jsxFileName = \"/Users/shruti/Documents/MyWebsite/mon-app/src/projects.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst projects = [{\n  title: \"DealMtrx(PE Connection Inc.)\",\n  description: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://www.dealmtrx.com/\",\n      children: \"https://www.dealmtrx.com/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 13\n    }, this), \"At the private equity company we are building a software product DealMtrx to simplify the process for Borrowers to grow and manage Lender relationships. As a team member, I am responsible for managing the Front-end part of the product and determine the structure and design of web pages. Building responsive web designs, UI using ReactJS, HTML5 grid layout, CSS3 media queries\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 22\n  }, this)\n}, {\n  title: \"Snapeda CAD model\",\n  description: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://shruti-test.herokuapp.com/\",\n      children: \"https://shruti-test.herokuapp.com/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this), \"As a freelancer I developed the front-end for the 'one-for-all' SnapeEDA model to be implemented in their partners' websites via a \", /*#__PURE__*/_jsxDEV(\"script\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 28\n    }, this), \" using Google Tag Manager.\\\\n I developed it in a way that it can be used by any or all future partners' of SnapEDA without any modifications\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), \"Original SnapEDA website:https://www.snapeda.com/\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 68\n    }, this), \"Current partner using this embed:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 46\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.rs-online.com/designspark/snapeda-parts-finder\",\n        children: \"https://www.rs-online.com/designspark/snapeda-parts-finder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.electronics-lab.com/snapeda-cad-models/?/#/\",\n        children: \"https://www.electronics-lab.com/snapeda-cad-models/?/#/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 22\n  }, this)\n}, {\n  title: \"Social Media Website\",\n  description: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/shrutibakutra/Social-Network\",\n      children: \"https://github.com/shrutibakutra/Social-Network\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), \"A Twitter-like social network website for making posts and following users. The back-end was managed using Django while front-end in JavaScript and HTML. I created APIs for a used to Add, Update and Read posts. In addition to that, a user can like/dislike posts as well as follow/unfollow users.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 22\n  }, this)\n}, {\n  title: \"Burger builder\",\n  description: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/shrutibakutra/Burger-Builder\",\n      children: \"https://github.com/shrutibakutra/Burger-Builder\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), \"A front-end (ReactJS) for making a burger where a use can choose burgers from the menu, add to cart and make payments. Or, A user can customize their burger by adding ingredients of their own choice and make it even more tasty.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 22\n  }, this)\n}, {\n  title: \"E-Commerce Website\",\n  description: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/shrutibakutra/Ecommerce\",\n      children: \"https://github.com/shrutibakutra/Ecommerce\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this), \"An eBay-like e-commerce auction site that will allow users to post auction listings, place bids on listings, comment on those listings, and add listings to a \\u201Cwatchlist\\\". This project was built using Django for backend and HTML for front-end. Data was managed in Django's inbuilt database,SQLite3.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 22\n  }, this)\n}, {\n  title: \"Email Client\",\n  description: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/shrutibakutra/Email-Client\",\n      children: \"https://github.com/shrutibakutra/Email-Client\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), \"A front-end for an email client that makes API calls to send and receive emails. In this project, back-end was handled using Django while front-end in JavaScript and HTML. I created APIs for user to Send, Receive and  Archieve emails.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 22\n  }, this)\n}, {\n  title: \"Crud Operations\",\n  description: /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://github.com/shrutibakutra/crispy-dollop\",\n      children: \"https://github.com/shrutibakutra/crispy-dollop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), \"In this project I did CRUD operation using ReactJS in frond-end and NodeJS in back-end to manage data of different companies and their employees.I joined two tables using lookup to store data in require manner in mongoDB.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 22\n  }, this)\n}];\nexport default projects;","map":{"version":3,"names":["projects","title","description","_jsxDEV","children","href","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/shruti/Documents/MyWebsite/mon-app/src/projects.js"],"sourcesContent":["\nconst projects =\n    [{\n        title: \"DealMtrx(PE Connection Inc.)\",\n        description: <div>\n            <a href=\"https://www.dealmtrx.com/\">https://www.dealmtrx.com/</a>\n            At the private equity company we are building a software product DealMtrx to \n            simplify the process for Borrowers to grow and manage Lender relationships. \n            As a team member, I am responsible for managing the Front-end part of the product \n            and determine the structure and design of web pages. Building responsive web designs, \n            UI using ReactJS, HTML5 grid layout, CSS3 media queries\n            </div>\n    },\n    {\n        title: \"Snapeda CAD model\",\n        description: <div>\n            <a href=\"https://shruti-test.herokuapp.com/\">https://shruti-test.herokuapp.com/</a>\n            <br />As a freelancer I developed the front-end for the 'one-for-all' SnapeEDA model to be implemented in their partners'\n            websites via a <script /> using Google Tag Manager.\\n I developed it in a way that\n            it can be used by any or all future partners' of SnapEDA without any modifications\n            <br />Original SnapEDA website:https://www.snapeda.com/<br />\n            Current partner using this embed:<br />\n\n            <li>\n                <a href=\"https://www.rs-online.com/designspark/snapeda-parts-finder\">\n                    https://www.rs-online.com/designspark/snapeda-parts-finder\n                </a>\n            </li>\n            <li>\n                <a href=\"https://www.electronics-lab.com/snapeda-cad-models/?/#/\">\n                    https://www.electronics-lab.com/snapeda-cad-models/?/#/\n                </a>\n            </li>\n        </div>\n    },\n    {\n        title: \"Social Media Website\",\n        description: <div>\n            <a href=\"https://github.com/shrutibakutra/Social-Network\">https://github.com/shrutibakutra/Social-Network</a>\n            <br />\n            A Twitter-like social network website for making posts and following users.\n            The back-end was managed using Django while front-end in JavaScript and HTML. I created APIs for a used to Add, Update and Read posts.\n            In addition to that, a user can like/dislike posts as well as follow/unfollow users.\n        </div>\n    },\n    {\n        title: \"Burger builder\",\n        description: <div>\n            <a href=\"https://github.com/shrutibakutra/Burger-Builder\">https://github.com/shrutibakutra/Burger-Builder</a>\n            <br />\n            A front-end (ReactJS) for making a burger where a use can choose burgers from the menu, add to cart and make payments. Or, A user can customize their burger by adding ingredients of their own choice and make it even more tasty.\n        </div>\n    },\n    {\n        title: \"E-Commerce Website\",\n        description: <div>\n            <a href=\"https://github.com/shrutibakutra/Ecommerce\">\n                https://github.com/shrutibakutra/Ecommerce\n            </a>\n            <br />\n            An eBay-like e-commerce auction site that will allow users to post auction listings,\n            place bids on listings, comment on those listings, and add listings to a “watchlist\".\n            This project was built using Django for backend and HTML for front-end. Data was managed in Django's inbuilt database,SQLite3.\n        </div>\n    },\n    {\n        title: \"Email Client\",\n        description: <div>\n            <a href=\"https://github.com/shrutibakutra/Email-Client\">\n                https://github.com/shrutibakutra/Email-Client\n            </a>\n            <br />\n            A front-end for an email client that makes API calls to send and receive emails.\n            In this project, back-end was handled using Django while front-end in JavaScript and HTML.\n            I created APIs for user to Send, Receive and  Archieve emails.\n        </div>\n    },\n    {\n        title: \"Crud Operations\",\n        description: <div>\n            <a href=\"https://github.com/shrutibakutra/crispy-dollop\">\n                https://github.com/shrutibakutra/crispy-dollop\n            </a>\n            <br />\n            In this project I did CRUD operation using ReactJS in frond-end and NodeJS in back-end to manage\n            data of different companies and their employees.I joined two tables using lookup to store data in\n            require manner in mongoDB.\n        </div>\n    }\n    ]\nexport default projects;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}